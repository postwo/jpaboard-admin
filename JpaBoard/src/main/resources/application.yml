debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.example.JpaBoard: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
#     url: jdbc:mysql://localhost:3307/${database}   # 데이터베이스 초기화 전략
    url: jdbc:postgresql://localhost:5432/${database}
    username: ${user}
    password: ${pw}
#     driver-class-name: com.mysql.cj.jdbc.Driver
#     url: jdbc:h2:mem:testdb  # h2 데이터베이스 테스트 용도
#     username: sa
#     driver-class-name: org.h2.Driver
  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true  # 실행되는 쿼리 콘솔 출력
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  h2.console.enabled: false # h2 데이터베이스 사용할때 true로 설정하면 된다
  sql.init.mode: ALWAYS
  data.rest:
      base-path: /api
      detection-strategy: annotated #default(기본값),ALL(전부다),annotated(어노테이션(@repository)으로 지정한것만),visibilty(public으로 오픈한것만)  #repository를 노출시킬건지 정하는 용도
  thymeleaf3.decoupled-logic: true # annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' 이 의존성을 추가했기 때문에 이렇게 쓸수 있는거다

  # oauth2
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---

#spring:
#  config.activate.on-profile: heroku
#  datasource:
#    url: ${JAWSDB_URL}
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  jpa.hibernate.ddl-auto: create
#  sql.init.mode: always

---

spring:
  config.activate.on-profile: test
  datasource.url: jdbc:h2:mem:testdb